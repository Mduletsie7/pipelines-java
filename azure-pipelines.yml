# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: windows-latest

steps:

# Use Gradle to build Jar of Java app
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'

# Copy build artifacts to Azure Pipeline staging area
- task: CopyFiles@2
  inputs:
    targetFolder: '$(Build.ArtifactStagingDirectory)'    

# Archive build files
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

# Publish build artifacts to Azure Pipeline
- task: PublishBuildArtifacts@1    
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)'

# Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'PAYG subscription(98510e54-4e62-4d79-8000-68ac56355c66)'
    appType: 'webAppLinux'
    appName: 'appjava-wa'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    runtimeStack: 'JAVA|8-jre8'

